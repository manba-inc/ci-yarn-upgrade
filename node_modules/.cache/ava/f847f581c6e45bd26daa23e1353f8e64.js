"use strict";

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _ava = require("ava");

var _ava2 = _interopRequireDefault(_ava);

var _package = require("../package.json");

var _package2 = _interopRequireDefault(_package);

var _compare = require("../src/compare");

var _github = require("../src/github");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _test__ = _slicedToArray(_github.__test__, 1);

const CompareModel = _test__[0];


(0, _ava2.default)("toMarkdown#simple", t => {
    let diff = [["classnames", "2.2.0", "2.2.0", "2.2.5", "dependencies"], ["react", "15.0.0", "15.3.2", "15.3.2", "devDependencies"], ["fsevents", "1.0.0", "1.0.7", "1.0.14", "optionalDependencies"]];
    let map = new Map(diff.map(e => {
        let cw = new CompareModel(e);
        return [cw.name, cw];
    }));
    let expected = `## Updating Dependencies

| Name | Updating | Latest | dependencies | devDependencies | optionalDependencies |
|:---- |:--------:|:------:|:-:|:-:|:-:|
| classnames | 2.2.0 | 2.2.5 | * |   |   |
| react | 15.0.0...15.3.2 | 15.3.2 |   | * |   |
| fsevents | 1.0.0...1.0.7 | 1.0.14 |   |   | * |

Powered by [${_package2.default.name}](${_package2.default.homepage})`.split(/[\r]?\n/);
    let actual = (0, _compare.toMarkdown)(map).split(/[\r]?\n/);
    for (let i in expected) {
        t.is(actual[i], expected[i]);
    }
});

(0, _ava2.default)("toMarkdown#complex", t => {
    let cw = new CompareModel(["react", "15.0.0", "15.3.2", "15.3.2"]);
    cw.tags = new Set(["v15.0.0", "v15.3.2", "v15.3.2"]);
    cw.homepage = "https://facebook.github.io/react/";
    cw.repo = "https://github.com/facebook/react";
    let map = new Map().set(cw.name, cw);
    let expected = `## Updating Dependencies

| Name | Updating | Latest |
|:---- |:--------:|:------:|
| [react](${cw.homepage}) | [15.0.0...15.3.2](${cw.repo}/compare/v15.0.0...v15.3.2) | [15.3.2](${cw.repo}/compare/v15.0.0...v15.3.2) |

Powered by [${_package2.default.name}](${_package2.default.homepage})`.split(/[\r]?\n/);
    let actual = (0, _compare.toMarkdown)(map).split(/[\r]?\n/);
    for (let i in expected) {
        t.is(actual[i], expected[i]);
    }
});

(0, _ava2.default)("toTextTable", t => {
    let diff = [["classnames", "2.2.0", "2.2.0", "2.2.5", "dependencies"], ["react", "15.0.0", "15.3.2", "15.3.2", "devDependencies"], ["fsevents", "1.0.0", "1.0.7", "1.0.14", "optionalDependencies"]];
    let map = new Map(diff.map(e => {
        let cw = new CompareModel(e);
        return [cw.name, cw];
    }));
    let expected = `\u001b[90m============\u001b[39m\u001b[90m==================\u001b[39m\u001b[90m=========\u001b[39m\u001b[90m===============\u001b[39m\u001b[90m==================\u001b[39m\u001b[90m=======================\u001b[39m
 Name       \u001b[90m|\u001b[39m    Updating     \u001b[90m|\u001b[39m Latest \u001b[90m|\u001b[39m dependencies \u001b[90m|\u001b[39m devDependencies \u001b[90m|\u001b[39m optionalDependencies
\u001b[90m------------\u001b[39m\u001b[90m------------------\u001b[39m\u001b[90m---------\u001b[39m\u001b[90m---------------\u001b[39m\u001b[90m------------------\u001b[39m\u001b[90m-----------------------\u001b[39m
 classnames \u001b[90m|\u001b[39m      2.2.0      \u001b[90m|\u001b[39m 2.2.5  \u001b[90m|\u001b[39m      *       \u001b[90m|\u001b[39m                 \u001b[90m|\u001b[39m
\u001b[90m------------\u001b[39m\u001b[90m------------------\u001b[39m\u001b[90m---------\u001b[39m\u001b[90m---------------\u001b[39m\u001b[90m------------------\u001b[39m\u001b[90m-----------------------\u001b[39m
 react      \u001b[90m|\u001b[39m 15.0.0...15.3.2 \u001b[90m|\u001b[39m 15.3.2 \u001b[90m|\u001b[39m              \u001b[90m|\u001b[39m        *        \u001b[90m|\u001b[39m
\u001b[90m------------\u001b[39m\u001b[90m------------------\u001b[39m\u001b[90m---------\u001b[39m\u001b[90m---------------\u001b[39m\u001b[90m------------------\u001b[39m\u001b[90m-----------------------\u001b[39m
 fsevents   \u001b[90m|\u001b[39m  1.0.0...1.0.7  \u001b[90m|\u001b[39m 1.0.14 \u001b[90m|\u001b[39m              \u001b[90m|\u001b[39m                 \u001b[90m|\u001b[39m          *
\u001b[90m============\u001b[39m\u001b[90m==================\u001b[39m\u001b[90m=========\u001b[39m\u001b[90m===============\u001b[39m\u001b[90m==================\u001b[39m\u001b[90m=======================\u001b[39m`.split(/[\r]?\n/);

    let actual = (0, _compare.toTextTable)(map).split(/[\r]?\n/);
    for (let i in expected) {
        t.is(actual[i].trim(), expected[i].trim());
    }
});
//# sourceMappingURL=../node_modules/.cache/ava/f847f581c6e45bd26daa23e1353f8e64.js.map