"use strict";

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _powerAssertVisitorKeys = "{\"ArrayExpression\":[\"elements\"],\"AssignmentExpression\":[\"left\",\"right\"],\"BinaryExpression\":[\"left\",\"right\"],\"Directive\":[\"value\"],\"DirectiveLiteral\":[],\"BlockStatement\":[\"directives\",\"body\"],\"BreakStatement\":[\"label\"],\"CallExpression\":[\"callee\",\"arguments\"],\"CatchClause\":[\"param\",\"body\"],\"ConditionalExpression\":[\"test\",\"consequent\",\"alternate\"],\"ContinueStatement\":[\"label\"],\"DebuggerStatement\":[],\"DoWhileStatement\":[\"test\",\"body\"],\"EmptyStatement\":[],\"ExpressionStatement\":[\"expression\"],\"File\":[\"program\"],\"ForInStatement\":[\"left\",\"right\",\"body\"],\"ForStatement\":[\"init\",\"test\",\"update\",\"body\"],\"FunctionDeclaration\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"FunctionExpression\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"Identifier\":[\"typeAnnotation\"],\"IfStatement\":[\"test\",\"consequent\",\"alternate\"],\"LabeledStatement\":[\"label\",\"body\"],\"StringLiteral\":[],\"NumericLiteral\":[],\"NullLiteral\":[],\"BooleanLiteral\":[],\"RegExpLiteral\":[],\"LogicalExpression\":[\"left\",\"right\"],\"MemberExpression\":[\"object\",\"property\"],\"NewExpression\":[\"callee\",\"arguments\"],\"Program\":[\"directives\",\"body\"],\"ObjectExpression\":[\"properties\"],\"ObjectMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectProperty\":[\"key\",\"value\",\"decorators\"],\"RestElement\":[\"argument\",\"typeAnnotation\"],\"ReturnStatement\":[\"argument\"],\"SequenceExpression\":[\"expressions\"],\"SwitchCase\":[\"test\",\"consequent\"],\"SwitchStatement\":[\"discriminant\",\"cases\"],\"ThisExpression\":[],\"ThrowStatement\":[\"argument\"],\"TryStatement\":[\"block\",\"handler\",\"finalizer\"],\"UnaryExpression\":[\"argument\"],\"UpdateExpression\":[\"argument\"],\"VariableDeclaration\":[\"declarations\"],\"VariableDeclarator\":[\"id\",\"init\"],\"WhileStatement\":[\"test\",\"body\"],\"WithStatement\":[\"object\",\"body\"],\"AssignmentPattern\":[\"left\",\"right\"],\"ArrayPattern\":[\"elements\",\"typeAnnotation\"],\"ArrowFunctionExpression\":[\"params\",\"body\",\"returnType\",\"typeParameters\"],\"ClassBody\":[\"body\"],\"ClassDeclaration\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ClassExpression\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ExportAllDeclaration\":[\"source\"],\"ExportDefaultDeclaration\":[\"declaration\"],\"ExportNamedDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"ExportSpecifier\":[\"local\",\"exported\"],\"ForOfStatement\":[\"left\",\"right\",\"body\"],\"ImportDeclaration\":[\"specifiers\",\"source\"],\"ImportDefaultSpecifier\":[\"local\"],\"ImportNamespaceSpecifier\":[\"local\"],\"ImportSpecifier\":[\"local\",\"imported\"],\"MetaProperty\":[\"meta\",\"property\"],\"ClassMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectPattern\":[\"properties\",\"typeAnnotation\"],\"SpreadElement\":[\"argument\"],\"Super\":[],\"TaggedTemplateExpression\":[\"tag\",\"quasi\"],\"TemplateElement\":[],\"TemplateLiteral\":[\"quasis\",\"expressions\"],\"YieldExpression\":[\"argument\"],\"AnyTypeAnnotation\":[],\"ArrayTypeAnnotation\":[\"elementType\"],\"BooleanTypeAnnotation\":[],\"BooleanLiteralTypeAnnotation\":[],\"NullLiteralTypeAnnotation\":[],\"ClassImplements\":[\"id\",\"typeParameters\"],\"ClassProperty\":[\"key\",\"value\",\"typeAnnotation\",\"decorators\"],\"DeclareClass\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"DeclareFunction\":[\"id\"],\"DeclareInterface\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"DeclareModule\":[\"id\",\"body\"],\"DeclareModuleExports\":[\"typeAnnotation\"],\"DeclareTypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"DeclareVariable\":[\"id\"],\"ExistentialTypeParam\":[],\"FunctionTypeAnnotation\":[\"typeParameters\",\"params\",\"rest\",\"returnType\"],\"FunctionTypeParam\":[\"name\",\"typeAnnotation\"],\"GenericTypeAnnotation\":[\"id\",\"typeParameters\"],\"InterfaceExtends\":[\"id\",\"typeParameters\"],\"InterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"IntersectionTypeAnnotation\":[\"types\"],\"MixedTypeAnnotation\":[],\"EmptyTypeAnnotation\":[],\"NullableTypeAnnotation\":[\"typeAnnotation\"],\"NumericLiteralTypeAnnotation\":[],\"NumberTypeAnnotation\":[],\"StringLiteralTypeAnnotation\":[],\"StringTypeAnnotation\":[],\"ThisTypeAnnotation\":[],\"TupleTypeAnnotation\":[\"types\"],\"TypeofTypeAnnotation\":[\"argument\"],\"TypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"TypeAnnotation\":[\"typeAnnotation\"],\"TypeCastExpression\":[\"expression\",\"typeAnnotation\"],\"TypeParameter\":[\"bound\"],\"TypeParameterDeclaration\":[\"params\"],\"TypeParameterInstantiation\":[\"params\"],\"ObjectTypeAnnotation\":[\"properties\",\"indexers\",\"callProperties\"],\"ObjectTypeCallProperty\":[\"value\"],\"ObjectTypeIndexer\":[\"id\",\"key\",\"value\"],\"ObjectTypeProperty\":[\"key\",\"value\"],\"QualifiedTypeIdentifier\":[\"id\",\"qualification\"],\"UnionTypeAnnotation\":[\"types\"],\"VoidTypeAnnotation\":[],\"JSXAttribute\":[\"name\",\"value\"],\"JSXClosingElement\":[\"name\"],\"JSXElement\":[\"openingElement\",\"children\",\"closingElement\"],\"JSXEmptyExpression\":[],\"JSXExpressionContainer\":[\"expression\"],\"JSXSpreadChild\":[\"expression\"],\"JSXIdentifier\":[],\"JSXMemberExpression\":[\"object\",\"property\"],\"JSXNamespacedName\":[\"namespace\",\"name\"],\"JSXOpeningElement\":[\"name\",\"attributes\"],\"JSXSpreadAttribute\":[\"argument\"],\"JSXText\":[],\"Noop\":[],\"ParenthesizedExpression\":[\"expression\"],\"AwaitExpression\":[\"argument\"],\"ForAwaitStatement\":[\"left\",\"right\",\"body\"],\"BindExpression\":[\"object\",\"callee\"],\"Import\":[],\"Decorator\":[\"expression\"],\"DoExpression\":[\"body\"],\"ExportDefaultSpecifier\":[\"exported\"],\"ExportNamespaceSpecifier\":[\"exported\"],\"RestProperty\":[\"argument\"],\"SpreadProperty\":[\"argument\"]}",
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require("ava");

var _ava2 = _interopRequireDefault(_ava);

var _github = require("../src/github");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _test__ = _slicedToArray(_github.__test__, 4);

const CompareModel = _test__[0],
      diffURL = _test__[1],
      toTag = _test__[2],
      versionRange = _test__[3];


(0, _ava2.default)("CompareModel#rangeWanted", t => {
    var _rec = new _powerAssertRecorder();

    let cw = new CompareModel(["wayway", "0.0.1", "0.2.0", "3.1.6"]);
    t.true(_rec._expr(_rec._capt(_rec._capt(_rec._capt(cw, "arguments/0/left/callee/object").rangeWanted(), "arguments/0/left") === "0.0.1...0.2.0", "arguments/0"), {
        content: "t.true(cw.rangeWanted() === \"0.0.1...0.2.0\")",
        filepath: "test/github.test.js",
        line: 9,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[7,9]},\"property\":{\"type\":\"Identifier\",\"name\":\"rangeWanted\",\"range\":[10,21]},\"computed\":false,\"range\":[7,21]},\"arguments\":[],\"range\":[7,23]},\"right\":{\"type\":\"StringLiteral\",\"value\":\"0.0.1...0.2.0\",\"range\":[28,43]},\"range\":[7,43]}],\"range\":[0,44]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[7,9]},{\"type\":{\"label\":\".\"},\"range\":[9,10]},{\"type\":{\"label\":\"name\"},\"value\":\"rangeWanted\",\"range\":[10,21]},{\"type\":{\"label\":\"(\"},\"range\":[21,22]},{\"type\":{\"label\":\")\"},\"range\":[22,23]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[24,27]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1...0.2.0\",\"range\":[28,43]},{\"type\":{\"label\":\")\"},\"range\":[43,44]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#rangeLatest", t => {
    var _rec2 = new _powerAssertRecorder();

    let cw = new CompareModel(["wayway", "0.0.1", "0.2.0", "3.1.6"]);
    t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(cw, "arguments/0/left/callee/object").rangeLatest(), "arguments/0/left") === "0.0.1...3.1.6", "arguments/0"), {
        content: "t.true(cw.rangeLatest() === \"0.0.1...3.1.6\")",
        filepath: "test/github.test.js",
        line: 14,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[7,9]},\"property\":{\"type\":\"Identifier\",\"name\":\"rangeLatest\",\"range\":[10,21]},\"computed\":false,\"range\":[7,21]},\"arguments\":[],\"range\":[7,23]},\"right\":{\"type\":\"StringLiteral\",\"value\":\"0.0.1...3.1.6\",\"range\":[28,43]},\"range\":[7,43]}],\"range\":[0,44]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[7,9]},{\"type\":{\"label\":\".\"},\"range\":[9,10]},{\"type\":{\"label\":\"name\"},\"value\":\"rangeLatest\",\"range\":[10,21]},{\"type\":{\"label\":\"(\"},\"range\":[21,22]},{\"type\":{\"label\":\")\"},\"range\":[22,23]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[24,27]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1...3.1.6\",\"range\":[28,43]},{\"type\":{\"label\":\")\"},\"range\":[43,44]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#versionRange#noRange", t => {
    var _rec3 = new _powerAssertRecorder();

    t.true(_rec3._expr(_rec3._capt(_rec3._capt(versionRange("0.0.1", "0.0.1"), "arguments/0/left") === "0.0.1", "arguments/0"), {
        content: "t.true(versionRange(\"0.0.1\", \"0.0.1\") === \"0.0.1\")",
        filepath: "test/github.test.js",
        line: 18,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"versionRange\",\"range\":[7,19]},\"arguments\":[{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[20,27]},{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[29,36]}],\"range\":[7,37]},\"right\":{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[42,49]},\"range\":[7,49]}],\"range\":[0,50]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"versionRange\",\"range\":[7,19]},{\"type\":{\"label\":\"(\"},\"range\":[19,20]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[20,27]},{\"type\":{\"label\":\",\"},\"range\":[27,28]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[29,36]},{\"type\":{\"label\":\")\"},\"range\":[36,37]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[38,41]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[42,49]},{\"type\":{\"label\":\")\"},\"range\":[49,50]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#diffWantedURL#norepo", t => {
    var _rec4 = new _powerAssertRecorder();

    let cw = new CompareModel(["wayway", "0.0.1", "0.2.0", "3.1.6"]);
    t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(cw, "arguments/0/left/callee/object").diffWantedURL(), "arguments/0/left") === "", "arguments/0"), {
        content: "t.true(cw.diffWantedURL() === \"\")",
        filepath: "test/github.test.js",
        line: 23,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[7,9]},\"property\":{\"type\":\"Identifier\",\"name\":\"diffWantedURL\",\"range\":[10,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[],\"range\":[7,25]},\"right\":{\"type\":\"StringLiteral\",\"value\":\"\",\"range\":[30,32]},\"range\":[7,32]}],\"range\":[0,33]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[7,9]},{\"type\":{\"label\":\".\"},\"range\":[9,10]},{\"type\":{\"label\":\"name\"},\"value\":\"diffWantedURL\",\"range\":[10,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\")\"},\"range\":[24,25]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[26,29]},{\"type\":{\"label\":\"string\"},\"value\":\"\",\"range\":[30,32]},{\"type\":{\"label\":\")\"},\"range\":[32,33]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#diffWantedURL", t => {
    var _rec5 = new _powerAssertRecorder();

    let cw = new CompareModel(["wayway", "0.0.1", "0.2.0", "3.1.6"]);
    cw.tags = new Set(["v0.0.1", "v0.2.0"]);
    cw.repo = "http://github.com/taichi/test-project";
    t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(cw, "arguments/0/left/callee/object").diffWantedURL(), "arguments/0/left") === _rec5._capt(`${_rec5._capt(_rec5._capt(cw, "arguments/0/right/expressions/0/object").repo, "arguments/0/right/expressions/0")}/compare/v0.0.1...v0.2.0`, "arguments/0/right"), "arguments/0"), {
        content: "t.true(cw.diffWantedURL() === `${cw.repo}/compare/v0.0.1...v0.2.0`)",
        filepath: "test/github.test.js",
        line: 30,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[7,9]},\"property\":{\"type\":\"Identifier\",\"name\":\"diffWantedURL\",\"range\":[10,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[],\"range\":[7,25]},\"right\":{\"type\":\"TemplateLiteral\",\"quasis\":[{\"type\":\"TemplateElement\",\"value\":{\"raw\":\"\",\"cooked\":\"\"},\"tail\":false,\"range\":[31,31]},{\"type\":\"TemplateElement\",\"value\":{\"raw\":\"/compare/v0.0.1...v0.2.0\",\"cooked\":\"/compare/v0.0.1...v0.2.0\"},\"tail\":true,\"range\":[41,65]}],\"expressions\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[33,35]},\"property\":{\"type\":\"Identifier\",\"name\":\"repo\",\"range\":[36,40]},\"computed\":false,\"range\":[33,40]}],\"range\":[30,66]},\"range\":[7,66]}],\"range\":[0,67]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[7,9]},{\"type\":{\"label\":\".\"},\"range\":[9,10]},{\"type\":{\"label\":\"name\"},\"value\":\"diffWantedURL\",\"range\":[10,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\")\"},\"range\":[24,25]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[26,29]},{\"type\":{\"label\":\"`\"},\"range\":[30,31]},{\"type\":{\"label\":\"template\"},\"value\":\"\",\"range\":[31,31]},{\"type\":{\"label\":\"${\"},\"range\":[31,33]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[33,35]},{\"type\":{\"label\":\".\"},\"range\":[35,36]},{\"type\":{\"label\":\"name\"},\"value\":\"repo\",\"range\":[36,40]},{\"type\":{\"label\":\"}\"},\"range\":[40,41]},{\"type\":{\"label\":\"template\"},\"value\":\"/compare/v0.0.1...v0.2.0\",\"range\":[41,65]},{\"type\":{\"label\":\"`\"},\"range\":[65,66]},{\"type\":{\"label\":\")\"},\"range\":[66,67]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#diffLatestURL", t => {
    var _rec6 = new _powerAssertRecorder();

    let cw = new CompareModel(["wayway", "0.0.1", "0.2.0", "3.1.6"]);
    cw.tags = new Set(["v0.0.1", "v3.1.6"]);
    cw.repo = "http://github.com/taichi/test-project";
    t.true(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(cw, "arguments/0/left/callee/object").diffLatestURL(), "arguments/0/left") === _rec6._capt(`${_rec6._capt(_rec6._capt(cw, "arguments/0/right/expressions/0/object").repo, "arguments/0/right/expressions/0")}/compare/v0.0.1...v3.1.6`, "arguments/0/right"), "arguments/0"), {
        content: "t.true(cw.diffLatestURL() === `${cw.repo}/compare/v0.0.1...v3.1.6`)",
        filepath: "test/github.test.js",
        line: 37,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[7,9]},\"property\":{\"type\":\"Identifier\",\"name\":\"diffLatestURL\",\"range\":[10,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[],\"range\":[7,25]},\"right\":{\"type\":\"TemplateLiteral\",\"quasis\":[{\"type\":\"TemplateElement\",\"value\":{\"raw\":\"\",\"cooked\":\"\"},\"tail\":false,\"range\":[31,31]},{\"type\":\"TemplateElement\",\"value\":{\"raw\":\"/compare/v0.0.1...v3.1.6\",\"cooked\":\"/compare/v0.0.1...v3.1.6\"},\"tail\":true,\"range\":[41,65]}],\"expressions\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[33,35]},\"property\":{\"type\":\"Identifier\",\"name\":\"repo\",\"range\":[36,40]},\"computed\":false,\"range\":[33,40]}],\"range\":[30,66]},\"range\":[7,66]}],\"range\":[0,67]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[7,9]},{\"type\":{\"label\":\".\"},\"range\":[9,10]},{\"type\":{\"label\":\"name\"},\"value\":\"diffLatestURL\",\"range\":[10,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\")\"},\"range\":[24,25]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[26,29]},{\"type\":{\"label\":\"`\"},\"range\":[30,31]},{\"type\":{\"label\":\"template\"},\"value\":\"\",\"range\":[31,31]},{\"type\":{\"label\":\"${\"},\"range\":[31,33]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[33,35]},{\"type\":{\"label\":\".\"},\"range\":[35,36]},{\"type\":{\"label\":\"name\"},\"value\":\"repo\",\"range\":[36,40]},{\"type\":{\"label\":\"}\"},\"range\":[40,41]},{\"type\":{\"label\":\"template\"},\"value\":\"/compare/v0.0.1...v3.1.6\",\"range\":[41,65]},{\"type\":{\"label\":\"`\"},\"range\":[65,66]},{\"type\":{\"label\":\")\"},\"range\":[66,67]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#diffURL#tree", t => {
    var _rec7 = new _powerAssertRecorder();

    let cw = new CompareModel(["wayway", "0.0.1", "0.2.0", "3.1.6"]);
    cw.tags = new Set(["v0.0.1"]);
    cw.repo = "http://github.com/taichi/test-project";
    t.true(_rec7._expr(_rec7._capt(_rec7._capt(diffURL(_rec7._capt(cw, "arguments/0/left/arguments/0"), "0.0.1"), "arguments/0/left") === _rec7._capt(`${_rec7._capt(_rec7._capt(cw, "arguments/0/right/expressions/0/object").repo, "arguments/0/right/expressions/0")}/tree/v0.0.1`, "arguments/0/right"), "arguments/0"), {
        content: "t.true(diffURL(cw, \"0.0.1\") === `${cw.repo}/tree/v0.0.1`)",
        filepath: "test/github.test.js",
        line: 44,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"diffURL\",\"range\":[7,14]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[15,17]},{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[19,26]}],\"range\":[7,27]},\"right\":{\"type\":\"TemplateLiteral\",\"quasis\":[{\"type\":\"TemplateElement\",\"value\":{\"raw\":\"\",\"cooked\":\"\"},\"tail\":false,\"range\":[33,33]},{\"type\":\"TemplateElement\",\"value\":{\"raw\":\"/tree/v0.0.1\",\"cooked\":\"/tree/v0.0.1\"},\"tail\":true,\"range\":[43,55]}],\"expressions\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"cw\",\"range\":[35,37]},\"property\":{\"type\":\"Identifier\",\"name\":\"repo\",\"range\":[38,42]},\"computed\":false,\"range\":[35,42]}],\"range\":[32,56]},\"range\":[7,56]}],\"range\":[0,57]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"diffURL\",\"range\":[7,14]},{\"type\":{\"label\":\"(\"},\"range\":[14,15]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[15,17]},{\"type\":{\"label\":\",\"},\"range\":[17,18]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[19,26]},{\"type\":{\"label\":\")\"},\"range\":[26,27]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[28,31]},{\"type\":{\"label\":\"`\"},\"range\":[32,33]},{\"type\":{\"label\":\"template\"},\"value\":\"\",\"range\":[33,33]},{\"type\":{\"label\":\"${\"},\"range\":[33,35]},{\"type\":{\"label\":\"name\"},\"value\":\"cw\",\"range\":[35,37]},{\"type\":{\"label\":\".\"},\"range\":[37,38]},{\"type\":{\"label\":\"name\"},\"value\":\"repo\",\"range\":[38,42]},{\"type\":{\"label\":\"}\"},\"range\":[42,43]},{\"type\":{\"label\":\"template\"},\"value\":\"/tree/v0.0.1\",\"range\":[43,55]},{\"type\":{\"label\":\"`\"},\"range\":[55,56]},{\"type\":{\"label\":\")\"},\"range\":[56,57]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#toTag", t => {
    var _rec8 = new _powerAssertRecorder();

    let tags = new Set(["v0.0.1"]);
    t.true(_rec8._expr(_rec8._capt(_rec8._capt(toTag(_rec8._capt(tags, "arguments/0/left/arguments/0"), "0.0.1"), "arguments/0/left") === "v0.0.1", "arguments/0"), {
        content: "t.true(toTag(tags, \"0.0.1\") === \"v0.0.1\")",
        filepath: "test/github.test.js",
        line: 49,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"toTag\",\"range\":[7,12]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"tags\",\"range\":[13,17]},{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[19,26]}],\"range\":[7,27]},\"right\":{\"type\":\"StringLiteral\",\"value\":\"v0.0.1\",\"range\":[32,40]},\"range\":[7,40]}],\"range\":[0,41]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"toTag\",\"range\":[7,12]},{\"type\":{\"label\":\"(\"},\"range\":[12,13]},{\"type\":{\"label\":\"name\"},\"value\":\"tags\",\"range\":[13,17]},{\"type\":{\"label\":\",\"},\"range\":[17,18]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[19,26]},{\"type\":{\"label\":\")\"},\"range\":[26,27]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[28,31]},{\"type\":{\"label\":\"string\"},\"value\":\"v0.0.1\",\"range\":[32,40]},{\"type\":{\"label\":\")\"},\"range\":[40,41]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#toTag#withoutV", t => {
    var _rec9 = new _powerAssertRecorder();

    let tags = new Set(["0.0.1"]);
    t.true(_rec9._expr(_rec9._capt(_rec9._capt(toTag(_rec9._capt(tags, "arguments/0/left/arguments/0"), "0.0.1"), "arguments/0/left") === "0.0.1", "arguments/0"), {
        content: "t.true(toTag(tags, \"0.0.1\") === \"0.0.1\")",
        filepath: "test/github.test.js",
        line: 54,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"toTag\",\"range\":[7,12]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"tags\",\"range\":[13,17]},{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[19,26]}],\"range\":[7,27]},\"right\":{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[32,39]},\"range\":[7,39]}],\"range\":[0,40]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"toTag\",\"range\":[7,12]},{\"type\":{\"label\":\"(\"},\"range\":[12,13]},{\"type\":{\"label\":\"name\"},\"value\":\"tags\",\"range\":[13,17]},{\"type\":{\"label\":\",\"},\"range\":[17,18]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[19,26]},{\"type\":{\"label\":\")\"},\"range\":[26,27]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[28,31]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[32,39]},{\"type\":{\"label\":\")\"},\"range\":[39,40]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

(0, _ava2.default)("CompareModel#toTag#noTag", t => {
    var _rec10 = new _powerAssertRecorder();

    let tags = new Set();
    t.falsy(_rec10._expr(_rec10._capt(toTag(_rec10._capt(tags, "arguments/0/arguments/0"), "0.0.1"), "arguments/0"), {
        content: "t.falsy(toTag(tags, \"0.0.1\"))",
        filepath: "test/github.test.js",
        line: 59,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"falsy\",\"range\":[2,7]},\"computed\":false,\"range\":[0,7]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"toTag\",\"range\":[8,13]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"tags\",\"range\":[14,18]},{\"type\":\"StringLiteral\",\"value\":\"0.0.1\",\"range\":[20,27]}],\"range\":[8,28]}],\"range\":[0,29]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"name\"},\"value\":\"falsy\",\"range\":[2,7]},{\"type\":{\"label\":\"(\"},\"range\":[7,8]},{\"type\":{\"label\":\"name\"},\"value\":\"toTag\",\"range\":[8,13]},{\"type\":{\"label\":\"(\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"tags\",\"range\":[14,18]},{\"type\":{\"label\":\",\"},\"range\":[18,19]},{\"type\":{\"label\":\"string\"},\"value\":\"0.0.1\",\"range\":[20,27]},{\"type\":{\"label\":\")\"},\"range\":[27,28]},{\"type\":{\"label\":\")\"},\"range\":[28,29]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});
//# sourceMappingURL=../node_modules/.cache/ava/c6607a9e2447bd1e2af887c53030cf00.js.map